<snippet>
	<content><![CDATA[/**
 * View class for edit a ${1:Hello}.
 *
 * @package     Joomla.${2:Administrator}
 * @subpackage  com_${3:project}
 * @since       ${4:0.0.1}
 */
class ${3/(.+)/\u\1/g}View${1/(.+)/\u\1/g} extends JViewLegacy
{
	/**
	 * Method to display the view.
	 *
	 * @param   string  \$tpl  A template file to load. [optional]
	 *
	 * @return  mixed  A string if successful, otherwise a JError object.
	 *
	 * @since   $4
	 */
	public function display(\$tpl = null)
	{
		// Initialise variables.
		\$this->form  = \$this->get('Form');
		\$this->item  = \$this->get('Item');
		\$this->state = \$this->get('State');
		\$this->canDo = ${3/(.+)/\u\1/g}Helper::getActions('com_${3/(.+)/\L\1/g}');

		// Check for errors.
		if (count(\$errors = \$this->get('Errors')))
		{
			JFactory::getApplication()->enqueueMessage(implode("\n", \$errors), 'error');
			return false;
		}

		// We do not need toolbar in the modal window.
		if (\$this->getLayout() !== 'modal')
		{
			\$this->form->setFieldAttribute('language', 'readonly', 'true');
		}

		\$this->addToolbar();

		parent::display(\$tpl);
	}

	/**
	 * Add the page title and toolbar.
	 *
	 * @return  void
	 *
	 * @since   $4
	 */
	protected function addToolbar()
	{
		JFactory::getApplication()->input->set('hidemainmenu', true);

		// Initialise Variables
		\$user       = JFactory::getUser();
		\$userId     = \$user->get('id');
		\$isNew      = (\$this->item->id == 0);
		\$checkedOut = !(\$this->item->checked_out == 0 || \$this->item->checked_out == \$userId);

		// Since we do not track these assets at the item level.
		\$canDo = \$this->canDo;

		JToolbarHelper::title(JText::_('COM_${3/(.+)/\U\1/g}_PAGE_' . (\$checkedOut ? 'VIEW_${1/(.+)/\U\1/g}' : (\$isNew ? 'ADD_${1/(.+)/\U\1/g}' : 'EDIT_${2/(.+)/\U\1/g}'))), 'pencil-2 ${2/(.+)/\L\1/g}-add');

		// Built the actions for new and existing records.
		// For new records, check the create permission.
		if (\$isNew)
		{
			JToolbarHelper::apply('${1/(.+)/\L\1/g}.apply');
			JToolbarHelper::save('${1/(.+)/\L\1/g}.save');
			JToolbarHelper::save2new('${1/(.+)/\L\1/g}.save2new');
			JToolbarHelper::cancel('${1/(.+)/\L\1/g}.cancel');
		}
		else
		{
			// Can not save the record if it's checked out.
			if (!\$checkedOut)
			{
				// Since it's an existing record, check the edit permission, or fall back to edit own if the owner.
				if (\$canDo->get('core.edit') || (\$canDo->get('core.edit.own') && \$this->item->created_by == \$userId))
				{
					JToolbarHelper::apply('${1/(.+)/\L\1/g}.apply');
					JToolbarHelper::save('${1/(.+)/\L\1/g}.save');

					// We can save this record, but check the create permission to see if we can return to make a new one.
					if (\$canDo->get('core.create'))
					{
						JToolbarHelper::save2new('${1/(.+)/\L\1/g}.save2new');
					}
				}
			}

			// If checked out, we can still save.
			if (\$canDo->get('core.create'))
			{
				JToolbarHelper::save2copy('${1/(.+)/\L\1/g}.save2copy');
			}

			if (\$this->state->params->get('save_history', 1) && \$user->authorise('core.edit'))
			{
				JToolbarHelper::versions('com_${3/(.+)/\L\1/g}.${1/(.+)/\L\1/g}', \$this->item->id);
			}

			JToolbarHelper::cancel('${1/(.+)/\L\1/g}.cancel', 'JTOOLBAR_CLOSE');
		}
		JToolBarHelper::help('${1/(.+)/\L\1/g}', \$com = true);
	}
}]]></content>
	<tabTrigger>joomla-admin-view-edit</tabTrigger>
	<scope>text.plain, text.php, source.php</scope>
</snippet>
